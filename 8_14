import java.util.*;

class Point{
	int x,y;
	Point(int x, int y){
		this.x = x;
		this.y = y;
	}
}

class Main {
	static int n, m, len, answer = Integer.MAX_VALUE;
	static int[] combi;
	static ArrayList<Point> hs, pz;
	
	public void DFS(int L, int s){
		if(L==m) {
			int sum = 0; // 도시의 피자 배달 거리
			for(Point h : hs) {
				int dis = Integer.MAX_VALUE; // 한 집의 최소 피자배달거리
				for(int i : combi) {
					dis = Math.min(dis,  Math.abs(h.x-pz.get(i).x) + Math.abs(h.y-pz.get(i).y));
				}
				sum += dis;
			}
			answer = Math.min(answer, sum);
		}
		
		else {
			for(int i=s; i<len; i++) { // 조합은 외워놓자.
				combi[L] = i;
				DFS(L+1, i+1);
			}
		}
	}
	
	

	public static void main(String[] args){
		Main T = new Main();
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt(); // 집의 수
		m = sc.nextInt(); // 피자집의 수
		hs = new ArrayList<>();
		pz = new ArrayList<>();
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++){
				int temp = sc.nextInt();
				if(temp == 1) hs.add(new Point(i,j));
				else if(temp == 2) pz.add(new Point(i,j));
			}
		}
		
		len = pz.size();
		combi = new int[m]; // len C m => m개의 피자집을 고르는 경우의 수
		T.DFS(0, 0);
		System.out.print(answer);
		
	}
}
