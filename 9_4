import java.util.*;

class Lecture implements Comparable<Lecture> {
	public int money;
	public int day;
	
	Lecture(int money, int day){
		this.money = money;
		this.day = day;
	}
	@Override
	public int compareTo(Lecture o) {
		return o.day - this.day;
	}
}

class Main {
	static int n, max=Integer.MIN_VALUE;
	
	public int solution(ArrayList<Lecture> arr) { 
		int answer = 0;
		PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder()); // 큰 값을 우선순위로 함
		Collections.sort(arr);
		int j = 0;
		for(int i = max; i>=1; i--) {
			for(; j<n; j++) {
				if(arr.get(j).day < i) break;
				pq.offer(arr.get(j).money);
			}
			if(!pq.isEmpty()) answer += pq.poll();
		}
		
		return answer;
	}
	
	

	public static void main(String[] args){
		Main T = new Main();
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt(); 
		ArrayList<Lecture> arr = new ArrayList<>();
		
		for(int i=0; i<n; i++) {
			int money = sc.nextInt();
			int day = sc.nextInt();
			arr.add(new Lecture(money, day));
			if(day>max) max=day;
		}
		
		
		System.out.print(T.solution(arr));
		
		
	}
}
