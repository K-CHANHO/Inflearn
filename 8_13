import java.util.*;

class Point{
	public int x, y;
	Point(int x, int y){
		this.x = x;
		this.y = y;
	}
}
	
public class Main {
	static int[] dx = {-1,0,1,0,1,1,-1,-1};
	static int[] dy = {0,1,0,-1,1,-1,1,-1};
	static int[][] board;
	static int n, count=0, c=1;
	static Queue<Point> Q = new LinkedList<>();
	static boolean flag = true;
	
	public void DFS(int a, int b) {
		board[a][b] = 0;
		for(int i=0; i<8; i++) {
			int nx = a+dx[i];
			int ny = b+dy[i];
			if(nx>=n || nx<0 || ny>=n || ny<0) continue;
			if(board[nx][ny]==1) DFS(nx,ny);
		}
		
	}
	
	public static void main(String args[]) {		
		Main T = new Main();
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		board = new int[n][n];
		
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				board[i][j] = sc.nextInt();
				}
			}
		
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				if(board[i][j]==1) {
					count++;
					T.DFS(i,j);
				}
			}
		}
	
		System.out.print(count);
		
	}

}

